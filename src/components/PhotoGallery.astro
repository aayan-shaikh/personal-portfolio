---
interface Props {
  images: string[];
  title?: string;
}

const { images, title = "Photography Portfolio" } = Astro.props;
---

<section class="photo-gallery">
  <div class="gallery-header">
    <h2>{title}</h2>
    <p>Capturing moments, creating memories</p>
  </div>

  <div class="gallery-grid">
    {
      images.map((image, index) => (
        <div class="gallery-item" data-index={index}>
          <img
            src={image}
            alt={`Photography work ${index + 1}`}
            loading="lazy"
            class="gallery-image"
          />
          <div class="image-overlay">
            <button class="view-btn" data-image={image}>
              {/* <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              >
                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" />
                <circle cx="12" cy="12" r="3" />
              </svg> */}
              View
            </button>
          </div>
        </div>
      ))
    }
  </div>

  <!-- Lightbox Modal -->
  <div class="lightbox" id="lightbox">
    <div class="lightbox-content">
      <button class="close-btn" id="close-lightbox">close</button>
      <img src="" alt="" id="lightbox-image" />
      <div class="lightbox-nav">
        <button class="nav-btn prev-btn" id="prev-btn">prev</button>
        <button class="nav-btn next-btn" id="next-btn">next</button>
      </div>
    </div>
  </div>
</section>

<style>
  .photo-gallery {
    padding: 2rem 0;
    max-width: 1200px;
    margin: 0 auto;
  }

  .gallery-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .gallery-header h2 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-primary, #1a1a1a);
    margin-bottom: 0.5rem;
  }

  .gallery-header p {
    font-size: 1.1rem;
    color: var(--text-secondary, #666);
    font-style: italic;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: 1fr 1fr !important;
    @media (min-width: 767px) {
      grid-template-columns: 1fr 1fr 1fr !important;
    }
    gap: 1.5rem;
    /* padding: 0 1rem; */
  }

  .gallery-item {
    will-change: filter;
    position: relative;
    aspect-ratio: 4/3;
    overflow: hidden;
    cursor: pointer;
    border: 1px solid rgba(0, 0, 0, 0.3);
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    transform-origin: bottom left;
    /* background-image: radial-gradient(
        circle at 20% 50%,
        rgba(0, 0, 0, 0.02) 1px,
        transparent 1px
      ),
      radial-gradient(
        circle at 80% 20%,
        rgba(0, 0, 0, 0.01) 1px,
        transparent 1px
      ); */
    /* background-size:
      30px 30px,
      50px 50px; */
    /* box-shadow:; */
    /* 0 2px 8px rgba(0, 0, 0, 0.08),
      1px 1px 4px rgba(0, 0, 0, 0.12); */
  }

  .gallery-item:hover {
    transform: translateY(-2px) rotate(0.5deg);
    img {
      filter: blur(1px);
    }
    box-shadow:
      0 6px 24px rgba(0, 0, 0, 0.12),
      2px 2px 8px rgba(0, 0, 0, 0.15);
  }

  .gallery-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .gallery-item:hover .gallery-image {
    transform: scale(1.05);
  }

  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .gallery-item:hover .image-overlay {
    opacity: 1;
  }

  .view-btn {
    font-family: "Red Hat Mono";
    background: transparent;
    border: none;
    /* border-radius: 50%; */
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    color: white;
    letter-spacing: 0.9;
  }

  .view-btn:hover {
    /* background: white; */
    /* transform: scale(1.1); */
  }

  /* Lightbox Styles */
  .lightbox {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    z-index: 1000;
    backdrop-filter: blur(5px);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .lightbox.active {
    opacity: 1;
    visibility: visible;
  }

  .lightbox-content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 60px 80px;
    box-sizing: border-box;
  }

  .close-btn {
    position: fixed;
    top: 20px;
    right: 20px;
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: white;
    font-family: "Red Hat Mono", monospace;
    font-size: 0.9rem;
    cursor: pointer;
    z-index: 1001;
    transition: all 0.3s ease;
    letter-spacing: 0.1em;
    padding: 8px 12px;
    backdrop-filter: blur(10px);
  }

  .close-btn:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.4);
  }

  #lightbox-image {
    max-width: 100%;
    max-height: 100%;
    width: auto;
    height: auto;
    object-fit: contain;
    display: block;
  }

  .lightbox-nav {
    position: fixed;
    top: 50%;
    transform: translateY(-50%);
    left: 0;
    right: 0;
    display: flex;
    justify-content: space-between;
    pointer-events: none;
    z-index: 1002;
  }

  .nav-btn {
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: white;
    font-family: "Red Hat Mono", monospace;
    font-size: 0.8rem;
    padding: 12px 16px;
    cursor: pointer;
    transition: all 0.3s ease;
    pointer-events: all;
    backdrop-filter: blur(10px);
    letter-spacing: 0.1em;
  }

  .nav-btn:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.4);
    transform: translateY(-1px);
  }

  .prev-btn {
    left: 20px;
  }

  .next-btn {
    right: 20px;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .gallery-grid {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1rem;
    }

    .gallery-header h2 {
      font-size: 2rem;
    }

    .lightbox-content {
      padding: 40px 20px;
    }

    .nav-btn {
      padding: 10px 12px;
      font-size: 0.7rem;
    }

    .prev-btn {
      left: 10px;
    }

    .next-btn {
      right: 10px;
    }
  }

  @media (max-width: 480px) {
    .gallery-grid {
      grid-template-columns: 1fr;
    }

    .gallery-item {
      aspect-ratio: 3/4;
    }

    .lightbox-content {
      padding: 20px 10px;
    }

    .prev-btn {
      left: 5px;
    }

    .next-btn {
      right: 5px;
    }
  }
</style>

<script>
  class PhotoGallery {
    constructor() {
      this.images = [];
      this.currentIndex = 0;
      this.lightbox = document.getElementById("lightbox");
      this.lightboxImage = document.getElementById("lightbox-image");
      this.init();
    }

    init() {
      // Collect all images
      const galleryItems = document.querySelectorAll(".gallery-item");
      galleryItems.forEach((item, index) => {
        const img = item.querySelector(".gallery-image");
        this.images.push(img.src);

        // Add click event to gallery item
        item.addEventListener("click", () => this.openLightbox(index));
      });

      // Lightbox controls
      document
        .getElementById("close-lightbox")
        .addEventListener("click", () => this.closeLightbox());
      document
        .getElementById("prev-btn")
        .addEventListener("click", () => this.prevImage());
      document
        .getElementById("next-btn")
        .addEventListener("click", () => this.nextImage());

      // Keyboard navigation
      document.addEventListener("keydown", (e) => {
        if (this.lightbox.classList.contains("active")) {
          switch (e.key) {
            case "Escape":
              this.closeLightbox();
              break;
            case "ArrowLeft":
              this.prevImage();
              break;
            case "ArrowRight":
              this.nextImage();
              break;
          }
        }
      });

      // Close on background click
      this.lightbox.addEventListener("click", (e) => {
        if (
          e.target === this.lightbox ||
          e.target.classList.contains("lightbox-content")
        ) {
          this.closeLightbox();
        }
      });

      // Prevent image clicks from closing
      this.lightboxImage.addEventListener("click", (e) => {
        e.stopPropagation();
      });
    }

    openLightbox(index) {
      this.currentIndex = index;
      this.lightboxImage.src = this.images[index];
      this.lightbox.classList.add("active");
      document.body.style.overflow = "hidden";
    }

    closeLightbox() {
      this.lightbox.classList.remove("active");
      document.body.style.overflow = "";
    }

    prevImage() {
      this.currentIndex =
        (this.currentIndex - 1 + this.images.length) % this.images.length;
      this.lightboxImage.src = this.images[this.currentIndex];
    }

    nextImage() {
      this.currentIndex = (this.currentIndex + 1) % this.images.length;
      this.lightboxImage.src = this.images[this.currentIndex];
    }
  }

  // Initialize when DOM is loaded
  document.addEventListener("DOMContentLoaded", () => {
    new PhotoGallery();
  });
</script>
